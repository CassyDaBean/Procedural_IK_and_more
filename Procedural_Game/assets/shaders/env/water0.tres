[gd_resource type="ShaderMaterial" load_steps=19 format=2]

[ext_resource path="res://assets/textures/env/liquid0.png" type="Texture" id=1]
[ext_resource path="res://assets/textures/env/liquid1.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeVectorCompose" id=1]

[sub_resource type="VisualShaderNodeVectorDecompose" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 2.0, 1, 0.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 2.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorCompose" id=6]

[sub_resource type="VisualShaderNodeScalarUniform" id=7]
uniform_name = "FlowSpeed"

[sub_resource type="VisualShaderNodeColorUniform" id=8]
uniform_name = "BaseColor"

[sub_resource type="VisualShaderNodeTextureUniform" id=9]
uniform_name = "Water1"
texture_type = 1

[sub_resource type="VisualShaderNodeColorOp" id=10]

[sub_resource type="VisualShaderNodeTextureUniform" id=11]
uniform_name = "Water2"
texture_type = 1

[sub_resource type="VisualShaderNodeColorOp" id=12]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=15]

[sub_resource type="VisualShader" id=16]
code = "shader_type spatial;
render_mode specular_schlick_ggx, shadows_disabled;

uniform vec4 BaseColor : hint_color;
uniform float FlowSpeed;
uniform sampler2D Water1 : hint_albedo;
uniform sampler2D Water2 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:2
	vec3 n_out2p0 = BaseColor.rgb;
	float n_out2p1 = BaseColor.a;

// Input:8
	vec3 n_out8p0 = vec3(UV, 0.0);

// VectorDecompose:11
	float n_out11p0 = n_out8p0.x;
	float n_out11p1 = n_out8p0.y;
	float n_out11p2 = n_out8p0.z;

// ScalarUniform:16
	float n_out16p0 = FlowSpeed;

// Input:7
	float n_out7p0 = TIME;

// ScalarOp:13
	float n_out13p0 = n_out16p0 * n_out7p0;

// ScalarOp:14
	float n_out14p0 = n_out11p1 - n_out13p0;

// VectorCompose:10
	vec3 n_out10p0 = vec3(n_out11p0, n_out14p0, n_out11p2);

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(Water1, n_out10p0.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// ScalarOp:12
	float n_out12p0 = n_out11p1 - n_out7p0;

// VectorCompose:15
	vec3 n_out15p0 = vec3(n_out11p0, n_out12p0, n_out11p2);

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(Water2, n_out15p0.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// ColorOp:6
	vec3 n_out6p0 = abs(n_out3p0 - n_out5p0);

// ColorOp:4
	vec3 n_out4p0 = vec3(1.0) - (vec3(1.0) - n_out2p0) * (vec3(1.0) - n_out6p0);

// Output:0
	ALBEDO = n_out4p0;
	ROUGHNESS = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));
	SPECULAR = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1504.92, -143.205 )
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2( 400, 120 )
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( -160, 320 )
nodes/fragment/3/node = SubResource( 9 )
nodes/fragment/3/position = Vector2( -420, -100 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( 80, 140 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( -460, 120 )
nodes/fragment/6/node = SubResource( 12 )
nodes/fragment/6/position = Vector2( -140, 160 )
nodes/fragment/7/node = SubResource( 13 )
nodes/fragment/7/position = Vector2( -1340, 200 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( -1500, 60 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( -700, 40 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -720, 140 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -1340, 60 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -1060, 120 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -1040, 20 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -980, -120 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -680, -100 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -1320, -40 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 4, 0, 0, 0, 3, 0, 6, 0, 5, 0, 6, 1, 6, 0, 4, 1, 4, 0, 0, 3, 4, 0, 0, 4, 8, 0, 11, 0, 7, 0, 12, 1, 11, 2, 10, 2, 10, 0, 3, 0, 7, 0, 13, 1, 13, 0, 14, 1, 11, 2, 15, 2, 15, 0, 9, 0, 10, 0, 9, 1, 15, 0, 5, 0, 16, 0, 13, 0, 11, 1, 14, 0, 11, 1, 12, 0, 12, 0, 15, 1, 11, 0, 15, 0, 14, 0, 10, 1, 11, 0, 10, 0 )

[resource]
shader = SubResource( 16 )
shader_param/BaseColor = Color( 0, 0.52549, 0.54902, 1 )
shader_param/FlowSpeed = 1.343
shader_param/Water1 = ExtResource( 1 )
shader_param/Water2 = ExtResource( 2 )
